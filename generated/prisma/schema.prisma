generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  username   String?
  email      String   @unique
  password   String?
  avatar     String?
  role       Int
  googleId   String?  @unique
  facebookId String?  @unique
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  stores        Store[]
  userTemplates UserTemplate[]

  @@map("users")
}

model Session {
  accountId Int
  session   String   @unique
  expiresAt DateTime

  @@map("sessions")
}

model Store {
  id         Int      @id @default(autoincrement())
  subdomain  String   @unique
  userId     Int
  user       User     @relation(fields: [userId], references: [id])
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("stores")
}

model Template {
  id             Int      @id @default(autoincrement())
  name           String
  description    String
  main_thumbnail String?
  sub_thumbnail  String?
  status         String
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt

  userTemplates UserTemplate[]

  @@map("templates")
}

model UserTemplate {
  id         Int      @id @default(autoincrement())
  userId     Int
  templateId Int
  status     String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  user     User      @relation(fields: [userId], references: [id])
  template Template  @relation(fields: [templateId], references: [id])
  contents Content[]

  @@map("user_templates")
}

model Content {
  id             Int      @id @default(autoincrement())
  userTemplateId Int
  sectionName    String
  contentJson    Json
  status         String
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt

  userTemplate UserTemplate @relation(fields: [userTemplateId], references: [id])

  @@map("content")
}
