generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  username  String?
  storename String? @unique
  email     String    @unique
  password  String?
  avatar    String?
  role      Int
  googleId  String?   @unique
  facebookId String?  @unique
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt

  userTemplates  UserTemplate[]
  reviews       Review[]

  @@map("users")
}

model Session {
  accountId Int
  session   String   @unique
  expiresAt DateTime

  @@map("sessions")
}

model Template {
  id             Int            @id @default(autoincrement())
  name           String
  description    String
  main_thumbnail String?
  sub_thumbnail  String?
  banner         String?
  price          String?
  status         String
  created_at     DateTime       @default(now())
  updated_at     DateTime       @updatedAt

  userTemplates  UserTemplate[]
  reviews        Review[]       // thêm: liên kết đến Review

  @@map("templates")
}

model UserTemplate {
  id         Int      @id @default(autoincrement())
  user_id     Int
  template_id Int
  status     String
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  user     User     @relation(fields: [user_id], references: [id])
  template Template @relation(fields: [template_id], references: [id])
  contents Content[]

  @@map("user_templates")
  @@unique([user_id, template_id])
}

model Content {
  id              Int      @id @default(autoincrement())
  userTemplateId  Int
  sectionName     String
  contentJson     Json
  status          String
  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt

  userTemplate UserTemplate @relation(fields: [userTemplateId], references: [id])

  @@map("content")
}

model Review {
  id           Int       @id @default(autoincrement())
  user_id      Int
  template_id  Int       // mới: liên kết đến Template
  rating       String    // 'love', 'neutral', 'not_happy'
  content      String?
  parent_id    Int?      // nullable để có thể là review gốc

  created_at   DateTime  @default(now())
  updated_at   DateTime  @updatedAt

  user         User       @relation(fields: [user_id], references: [id])
  template     Template   @relation(fields: [template_id], references: [id])
  parent       Review?    @relation("ReviewReplies", fields: [parent_id], references: [id])
  replies      Review[]   @relation("ReviewReplies")

  @@map("reviews")
  @@index([user_id])
  @@index([template_id])
  @@index([parent_id])
}